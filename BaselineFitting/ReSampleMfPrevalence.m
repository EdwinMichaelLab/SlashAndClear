% Resample by sampling importance resampling (SIR) algorithm

function likArrayId=ReSampleMfPrevalence(likelihoodArray,numNewRuns)

[numRuns,total_years]=size(likelihoodArray);
likArrayId = zeros(numNewRuns,total_years);

for cYear=1:total_years
    
    likelihoodArray(isnan(likelihoodArray(:,cYear)),cYear)=0;
    
    % convert likelihoods to probability weights
    sumLik = sum(likelihoodArray(:,cYear));
    probArray = likelihoodArray(:,cYear)/sumLik;
    maxProb = max(probArray);
    
    %implement rejection sampling from the probability
    %distribution generated by the likelihood calculations
    if ~(isnan(maxProb))
        iNum = 0;
        iReject = 0;
        while iNum < numNewRuns
            r = ceil((numRuns-1)*rand);
            rndNo = rand*maxProb;
            if rndNo <= probArray(r)
                iNum = iNum + 1;
                likArrayId(iNum,cYear)=r;
                iReject = 0;
            else
                iReject = iReject - 1;
            end
        end
    end
end